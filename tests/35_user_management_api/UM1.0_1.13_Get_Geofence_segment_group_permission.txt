*** Settings ***
Resource            user_management_api_imports.txt
Force Tags         	UM		UM1.0	UM1.13		BATCH17


*** Variables ***

*** Keywords ***

*** Test Cases ***
#wiki reference https://wiki.4info.com/display/Software/User+management+API
#API Name: Get segment datasource group permission
#Method: GET
#URL: ...user-management-api/ui-acc-datasource/geofence-segment?groupId=:group_id
#DESCRIPTION: None provided
#userName = rhino.users
#groupId = rhino.groups
#groups_segment_datasource
#segment_datasource

#Request For segment-datasource

UM1.13_TC_01 Validate 200 response and success=true is seen for all groups (group 1-16)
	[Documentation]		Get geofence by Group id
	Set Test Variable		${max_group}	16
	#Set Test Variable 		${groupId}		1
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=
	:FOR	${groupId}	IN RANGE	1		${max_group}
	\	USER MANAGEMENT API	uri=${uri_link}${groupId}	expected_status_code=200	success=true
	[Tags]

UM1.13_TC_02 Verify Total count api vs Database for group 1 (admin)
	[Documentation]		Get geofence_segment_db_count by Group id and compare with API results and DB results.
	Set Test Variable 		${groupId}		1
	Get geofence Segments From Group ID		group_id=${groupId}
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}
	${geofence_segments_api}=					Get Json Value						${body}										/geofence_segments
	@{geofence_segments_list}=					String.Split String 				${geofence_segments_api}			",
	${geofence_segments_api_count}=				Get Length 							${geofence_segments_list}
	Should Be Equal As Integers		${geofence_segments_api_count}	${geofence_segments_db_count}
	[Tags]		ADMIN_USER


UM1.13_TC_03 Verify Total count api vs Database for group 15 (Catalina)
	[Documentation]		Get geofence_segment_db_count by Group id 15
	Set Test Variable 		${groupId}		1
	Get geofence segments From Group ID		group_id=${groupId}
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}
	${geofence_segments_api}=					Get Json Value						${body}										/geofence_segments
	@{geofence_segments_list}=					String.Split String 				${geofence_segments_api}			",
	${geofence_segments_api_count}=				Get Length 							${geofence_segments_list}
	Should Be Equal As Integers		${geofence_segments_api_count}	${geofence_segments_db_count}
	[Tags]		ADMIN_USER

UM1.13_TC_04 Verify request returns authorized measurement-datasource
	[Documentation]		Get measurements by Group id
	Set Test Variable 		${groupId}		1
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}
	[Tags]		ADMIN_USER

UM1.13_TC_05 Verify segment-datasource request returns correct error if Group id is not in 'groups' table
	[Documentation]		Negative Test Get segments by Group id 99 that does not exist in db
	Set Test Variable 		${groupId}		99
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}				expected_status_code=400		success=false
	${reason}=    	extract_matching_regex	'${resp.content}'	"reason_desc":"(.*)"
	${code}=    	extract_matching_regex	'${resp.content}'	"reason_code":(.+?),
	Should Be Equal As Strings   ${code}	"700-101"
	Should Be Equal As Strings   ${reason}	Group id is not in 'groups' table.
	[Tags]		ADMIN_USER

UM1.13_TC_06 Verify measurement-datasource request returns correct error if Group id is not an integer value (2.1)
	[Documentation]		Negative Test Get measurements by Group id 2.1 that does not exist in db
	Set Test Variable 		${groupId}		2.1
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}					expected_status_code=400		success=false
	${reason}=    	extract_matching_regex	'${resp.content}'	"reason_desc":"(.*)"
	${code}=    	extract_matching_regex	'${resp.content}'	"reason_code":(.+?),
	Should Be Equal As Strings   ${code}	"700-102"
	Should Be Equal As Strings   ${reason}	Group id requires an integer value.
	[Tags]		ADMIN_USER

UM1.13_TC_07 Verify measurement-datasource request returns correct error if Group id is not an integer value (9abc)
	[Documentation]		Negative Test Get measurements by Group id in alpha numeric order
	Set Test Variable 		${groupId}		9abc
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}					expected_status_code=400		success=false
	${reason}=    	extract_matching_regex	'${resp.content}'	"reason_desc":"(.*)"
	${code}=    	extract_matching_regex	'${resp.content}'	"reason_code":(.+?),
	Should Be Equal As Strings   ${code}	"700-102"
	Should Be Equal As Strings   ${reason}	Group id requires an integer value.
	[Tags]		ADMIN_USER


#Request For target geofence segment - carry over from sanity
UM1.13_TC_026 Verify request returns an authorized geofence segment for excluded elements
	Set Test Variable 		${groupId}		2
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}

UM1.13_TC_027 Verify target geofence segment request returns correct error if Group id is not in 'groups' table
	Set Test Variable 		${groupId}		99
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}		expected_status_code=400		success=false
	${reason}=    	extract_matching_regex	'${resp.content}'	"reason_desc":"(.*)"
	${code}=    	extract_matching_regex	'${resp.content}'	"reason_code":(.+?),
	Should Be Equal As Strings   ${code}	"700-101"
	Should Be Equal As Strings   ${reason}	Group id is not in 'groups' table.

UM1.13_TC_028 Verify target geofence segment request returns correct error if Group id is not an integer value
	Set Test Variable 		${groupId}		2.1
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}		expected_status_code=400		success=false
	${reason}=    	extract_matching_regex	'${resp.content}'	"reason_desc":"(.*)"
	${code}=    	extract_matching_regex	'${resp.content}'	"reason_code":(.+?),
	Should Be Equal As Strings   ${code}	"700-102"
	Should Be Equal As Strings   ${reason}	Group id requires an integer value.

UM1.13_TC_29 Verify extra parameters are not seen
	Set Test Variable 		${groupId}		1
	Set Test Variable		${uri_link}		user-management-api/ui-acc-datasource/geofence-segment?groupId=${groupId}
	USER MANAGEMENT API	uri=${uri_link}
	Should Not Match Regexp		${body}		"pages"
	Should Not Match Regexp		${body}		"tabs"
	Should Not Match Regexp		${body}		"sections"
	Should Not Match Regexp		${body}		"fields"
	[Tags]