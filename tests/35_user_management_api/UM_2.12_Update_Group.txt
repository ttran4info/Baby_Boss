*** Settings ***
Resource            user_management_api_imports.txt
Force Tags          UM    UM2.12   BATCH17   OffshoreQA    EXCLUDE
Suite Setup         Clean UP Groups
Suite Teardown      Clean UP Groups

# wiki reference https://wiki.4info.com/display/Software/User+management+API#UsermanagementAPI-2.11.GetAllUIElementsList
# API Name: 2.11. Create A Group
# Method: Post
# URL: /user-management-api/admin/groups
# DESCRIPTION: This request will be called on Manage Groups tab to group creation.
# userName = rhino.users
# groupId = rhino.groups
# permissions = rhino.permissions
# User Permissions = rhino.user_permissions
# Reference table = rhino.ui_element
*** Variables ***
${QA_TEST_GROUP}            00_QA_TEST_GROUP
${LAST_MDFD_BY}             "saff@4info.com"

*** Keywords ***
Clean UP Groups
    Clean UP Created Groups By Name             groupName=${QA_TEST_GROUP}01
    Clean UP Created Groups By Name             groupName=${QA_TEST_GROUP}02
    Clean UP Created Groups By Name             groupName=${QA_TEST_GROUP}03
    Clean UP Created Groups By Name             groupName=${QA_TEST_GROUP}01_Update
    Clean UP Created Groups By Name             groupName=${QA_TEST_GROUP}02_Update

Create Group
    [Arguments]         ${GroupName}=${QA_TEST_GROUP}
    Set Test Variable           ${GroupName}            ${GroupName}
    USER MANAGEMENT API         request_type=POST
    ...                         data={"groupName":"${GroupName}","enabled": 1,"lastModifiedBy":${LAST_MDFD_BY}}
    ...                         uri=/user-management-api/admin/groups

Update_Group_Info
    [Arguments]         ${updateGroupId}=
    ...                 ${groupName}=${QA_TEST_GROUP}
    ...                 ${status}=1
    ...                 ${Expected_resp_code}=200
    Set Test Variable           ${Data}             {"groupName":"${groupName}","enabled":${status}, "lastModifiedBy":${LAST_MDFD_BY},"goalType":1}
    USER MANAGEMENT API         request_type=PUT
    ...                         data=${Data}
    ...                         uri=/user-management-api/admin/groups/${updateGroupId}?groupId=1
    ...                         expected_status_code=${Expected_resp_code}

*** Test cases ***
TC_00_Generate_data
    Create Group             GroupName=${QA_TEST_GROUP}01
    ${GroupID}=              Get Json Value      ${body}     /group/id
    Set Suite Variable       ${GroupName1_ID}        ${GroupID}
    Log   ${GroupName1_ID}
    Create Group             GroupName=${QA_TEST_GROUP}02
    ${GroupID}=              Get Json Value      ${body}     /group/id
    Set Suite Variable       ${GroupName2_ID}        ${GroupID}
    Log   ${GroupName2_ID}
    Create Group             GroupName=${QA_TEST_GROUP}03
    ${GroupID}=              Get Json Value      ${body}     /group/id
    Set Suite Variable       ${GroupName3_ID}        ${GroupID}
    Log   ${GroupName3_ID}
    [Tags]     Ctc123

TC_01_Update_Group_Info(Group Name)
    Update_Group_Info       updateGroupId=${GroupName1_ID}
    ...                     groupName=${QA_TEST_GROUP}01_Update
    Json Value Should Equal    ${body}    /success                      true
    Json Value Should Equal    ${body}    /group/id                     ${GroupName1_ID}
    Json Value Should Equal    ${body}    /group/groupName              "${QA_TEST_GROUP}01_Update"
    Json Value Should Equal    ${body}    /group/enabled                1
    Json Value Should Equal    ${body}    /group/goalType               1
    Json Value Should Equal    ${body}    /group/lastModifiedBy         ${LAST_MDFD_BY}
    [Tags]

TC_02_Update_Group_Info(Group Name with Special Chars)
    Update_Group_Info       updateGroupId=${GroupName1_ID}
    ...                     groupName=${QA_TEST_GROUP}@#$@#$
    ...                     Expected_resp_code=400
    Json Value Should Equal    ${body}    /success                      false
    Json Value Should Equal    ${body}    /reason_code                  "700-104"
    Json Value Should Equal    ${body}    /reason_desc                  "Only letters, numbers, underscores (_), hyphens (-), period(.) and single spaces are allowed."
    [Tags]

TC_03_Update_Group_Info(Group Name blank)
    Update_Group_Info       updateGroupId=${GroupName1_ID}
    ...                     groupName=${Empty}
    ...                     Expected_resp_code=400
    Json Value Should Equal    ${body}    /success                      false
    Json Value Should Equal    ${body}    /reason_code                  "700-104"
    Json Value Should Equal    ${body}    /reason_desc                  "groupName cannot be null."
    [Tags]

TC_04_Update_Group_Info(Status set to 0)
    Update_Group_Info       updateGroupId=${GroupName2_ID}
    ...                     groupName=${QA_TEST_GROUP}02_Update
    ...                     status=0
    Json Value Should Equal    ${body}    /success                      true
    Json Value Should Equal    ${body}    /group/id                     ${GroupName2_ID}
    Json Value Should Equal    ${body}    /group/groupName              "${QA_TEST_GROUP}02_Update"
    Json Value Should Equal    ${body}    /group/enabled                0
    Json Value Should Equal    ${body}    /group/goalType               1
    Json Value Should Equal    ${body}    /group/lastModifiedBy         ${LAST_MDFD_BY}
    [Tags]

TC_05_Update_Group_Info(Status set to invalid)
    Update_Group_Info       updateGroupId=${GroupName1_ID}
    ...                     status=10
    ...                     Expected_resp_code=400
    Json Value Should Equal    ${body}    /success                      false
    Json Value Should Equal    ${body}    /reason_code                  "700-104"
    Json Value Should Equal    ${body}    /reason_desc                  "enabled Type must be between 0 and 2."
    [Tags]
